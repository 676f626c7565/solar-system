name: Deployment - Reusable Workflow

on:
  workflow_call:
    inputs:
        mongodb-uri:
            required: true
            type: string
        kubectl-version:
            description: Provide the required Kubectl version
            default: v1.33.0
            required: false
            type: string
        k8s-manifest-dir:
            description: Directory containing Kubernetes manifests files
            default: kubernetes/
            required: true
            type: string 
        environment:
            description: Provide the Deployment Environment
            default: dev
            required: true
            type: string
    secrets:
    #   k8s-kubeconfig:
    #     required: true
      mongodb-password:
        required: true
    outputs:
      application-url:
        description: "The URL of the deployed application"
        value: ${{ jobs.reuse-deploy.outputs.APP_INGRESS_URL }}

jobs:
  reuse-deploy:
    outputs:
      APP_INGRESS_URL: ${{ steps.set-ingress-host-address.outputs.APP_INGRESS_HOST }}
    environment: 
      name: ${{ inputs.environment }}
      # url: https://${{ steps.set-ingress-host-address.outputs.APP_INGRESS_HOST }}
    runs-on: ubuntu-latest
    permissions:              # ← Add this permissions block
      id-token: write         # ← Required for OIDC
      contents: read    
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      
      - name: Install kubectl CLI
        uses: azure/setup-kubectl@v3
        with:
          version: '${{ inputs.kubectl-version }}'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::399597048779:role/GitHUB-Actions
          aws-region: ca-central-1
      
      - name: Update kubeconfig for EKS
        run: echo "aws eks update-kubeconfig --region ca-central-1 --name casual-alternative-badger"
      
      # - name: Debug AWS identity
      #   run: aws sts get-caller-identity

      # - name: Test EKS access
      #   run: |
      #    echo "Testing EKS cluster access..."
      #    aws eks describe-cluster --name casual-alternative-badger --region ca-central-1

      - name: Fetch Kubernetes Cluster Details
        run: |
          echo kubectl version --client
          echo ---------------------------------------------------
          echo kubectl get nodes

      - name: Check if manifest files exist
        run: |
          echo "Checking for manifest files in: ${{ inputs.k8s-manifest-dir }}"
          ls -la ${{ inputs.k8s-manifest-dir }} || echo "Directory does not exist"
          find . -name "*.yml" -o -name "*.yaml" | head -10

      - name: Replace Token in Manifest Files
        uses: cschleiden/replace-tokens@v1
        with:
          tokenPrefix: '_{_'
          tokenSuffix: '_}_'
          files: '${{ inputs.k8s-manifest-dir }}*.yml'
        env:
          NAMESPACE: ${{ vars.NAMESPACE }}
          REPLICAS: ${{ vars.REPLICAS }}
          IMAGE: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}

      - name: Check Files
        run: |
          echo "Using image: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}"
          echo "Looking for files in: ${{ inputs.k8s-manifest-dir }}"
          if ls ${{ inputs.k8s-manifest-dir }}*.yml 1> /dev/null 2>&1; then
            echo "Found YAML files:"
            ls -la ${{ inputs.k8s-manifest-dir }}*.yml
            echo "File contents:"
            for file in ${{ inputs.k8s-manifest-dir }}*.yml; do
              if [ -f "$file" ]; then
                echo "--- $file ---"
                cat "$file"
                echo ""
              fi
            done
          else
            echo "No .yml files found, checking for .yaml files..."
            if ls ${{ inputs.k8s-manifest-dir }}*.yaml 1> /dev/null 2>&1; then
              echo "Found YAML files:"
              ls -la ${{ inputs.k8s-manifest-dir }}*.yaml
              echo "File contents:"
              for file in ${{ inputs.k8s-manifest-dir }}*.yaml; do
                if [ -f "$file" ]; then
                  echo "--- $file ---"
                  cat "$file"
                  echo ""
                fi
              done
            else
              echo "No YAML files found in ${{ inputs.k8s-manifest-dir }}"
              echo "Directory contents:"
              ls -la ${{ inputs.k8s-manifest-dir }} || echo "Directory does not exist"
            fi
          fi

    #   - name: Create MongoDB Secret
    #     run: |
    #       kubectl -n ${{ vars.NAMESPACE }} create secret generic mongo-db-creds \
    #       --from-literal=MONGO_URI=${{ inputs.mongodb-uri }} \
    #       --from-literal=MONGO_USERNAME=${{ vars.MONGO_USERNAME }} \
    #       --from-literal=MONGO_PASSWORD=${{ secrets.mongodb-password }} \
    #       --save-config \
    #       --dry-run=client \
    #       -o yaml | kubectl apply -f -
      
      - name: Deploy to Dev Env
        run: |
          echo "kubectl apply -f ${{ inputs.k8s-manifest-dir }}"

      - name: Set App Ingress Host URL
        id: set-ingress-host-address
        run: |
          # For now, set a static URL since kubectl commands are echoed
          # In production, this would get the actual ingress URL
          if [ "${{ inputs.environment }}" = "production" ]; then
            echo "APP_INGRESS_HOST=solar-system-prod.example.com" >> "$GITHUB_OUTPUT"
          else
            echo "APP_INGRESS_HOST=solar-system-dev.example.com" >> "$GITHUB_OUTPUT"
          fi
          echo "Application will be available at: https://solar-system-${{ inputs.environment }}.example.com"